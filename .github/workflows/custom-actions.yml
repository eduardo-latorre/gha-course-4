# Why using custom actions_
# - Use actions related to the bussiness
# - To simplify steps in the actions
# - Re use these actions in other projects
# - Re group specific into a single actions
# - Non existing action in the community
# - To have more control over the action
# - To publish an action and publish it to the market

# Types of custom actions - the result is same in these three
# 1 Javascript actions: (Node JS, Javascript)
# 2 Docker actions, Containerized action:
# - Dockerfile, perform any taks and any language, Docker knwoledge
# 3 Composite:
# - Combines multiple workflow steps on a single action
# - Command run and uses actions

# When you create an action, whatever the name is,
# it always has to be named action
name: Custom Actions
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies # Using my custom action
        uses: ./.github/actions/cached-deps # Calling the action by relative path
      - name: Output custom action info
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}" # Using action output from Github file
        # uses: eduardo-latorre/my-action using action from Github Repo
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies # Using my custom action
        uses: ./.github/actions/cached-deps # Calling the action by relative path
        with: 
          caching: 'false' # No caching (just for testing purpouses)
      - name: Build website
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Deploying ..."
